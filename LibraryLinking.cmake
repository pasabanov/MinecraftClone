cmake_minimum_required(VERSION 3.24.2)

function(auto_target_link_libraries TARGET)

    find_package(PkgConfig)

    foreach(LIBRARY IN ITEMS ${ARGN})

        set(${LIBRARY}_LINKED FALSE)

        if(EXISTS ${LIBRARY})
            target_link_libraries(${CMAKE_PROJECT_NAME} ${LIBRARY})
            set(${LIBRARY}_LINKED TRUE)
        else()
            set(DEV_NULL pkg_check_modules(LIB_${LIBRARY} ${LIBRARY}))
            if(DEFINED LIB_${LIBRARY}_LIBRARIES)
                target_link_libraries(${TARGET} ${LIB_${LIBRARY}_LIBRARIES})
                set(${LIBRARY}_LINKED TRUE)
            endif()
        endif()

        if(${${LIBRARY}_LINKED} STREQUAL TRUE)
            continue()
        endif()

        foreach(LIB_DIR IN ITEMS ${CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES})
            if(EXISTS ${LIB_DIR}/${LIBRARY})
                target_link_libraries(${CMAKE_PROJECT_NAME} ${LIB_DIR}/${LIBRARY})
                set(${LIBRARY}_LINKED TRUE)
            elseif(EXISTS ${LIB_DIR}/${LIBRARY}.a)
                target_link_libraries(${CMAKE_PROJECT_NAME} ${LIB_DIR}/${LIBRARY}.a)
                set(${LIBRARY}_LINKED TRUE)
            elseif(EXISTS ${LIB_DIR}/${LIBRARY}.so)
                target_link_libraries(${CMAKE_PROJECT_NAME} ${LIB_DIR}/${LIBRARY}.so)
                set(${LIBRARY}_LINKED TRUE)
            elseif(EXISTS ${LIB_DIR}/lib${LIBRARY}.a)
                target_link_libraries(${CMAKE_PROJECT_NAME} ${LIB_DIR}/lib${LIBRARY}.a)
                set(${LIBRARY}_LINKED TRUE)
            elseif(EXISTS ${LIB_DIR}/lib${LIBRARY}.so)
                target_link_libraries(${CMAKE_PROJECT_NAME} ${LIB_DIR}/lib${LIBRARY}.so)
                set(${LIBRARY}_LINKED TRUE)
            endif()
        endforeach()

        if(NOT ${${LIBRARY}_LINKED} STREQUAL TRUE)
            message(FATAL_ERROR "Cannot find library ${LIBRARY}.")
        endif()
    endforeach()
endfunction()